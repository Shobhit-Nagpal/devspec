---
import { db, Emails } from "astro:db";

const ALREADY_EXISTS_ERROR = "SQLITE_CONSTRAINT";
let error = null;
let isSuccess = false;
let successMessage = "Thanks for subscribing! We'll keep you updated."

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const email = formData.get("email");

  if (typeof email === "string") {
    try {
    await db.insert(Emails).values({ email })
    isSuccess = true;
    } catch(err) {
      if (err instanceof Error) {
        if (err.code.toString() === ALREADY_EXISTS_ERROR) {
          successMessage = "You've already subscribed! We'll keep you updated"
          isSuccess = true;
        } else {
          error = "Failed to subscribe. Please try again later.";
          console.error("Database error:", err.message);
        }
      }
    }
  }
}
---
{ isSuccess ? (
<div class="flex flex-col gap-4 max-w-md mx-auto p-6 bg-green-50 rounded-lg">
  <p class="text-green-700 font-medium">{successMessage}</p>
</div>

) : (

<form method="POST" class="flex flex-col gap-4 max-w-md mx-auto p-6 bg-gray-50 rounded-lg">
  {error && (
      <div class="p-3 bg-red-50 border border-red-200 rounded-md">
    <p class="text-red-600 text-sm">{error}</p>
  </div>
  )}
  <div class="flex flex-col gap-2">
    <label 
      for="email" 
      class="text-sm font-medium text-gray-700"
    >
      Get notified when we launch
    </label>
    <input 
      id="email" 
      type="email" 
      name="email" 
      placeholder="Enter your email"
      required
      class="px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
    />
  </div>
  <button 
    type="submit"
    class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors duration-200 font-medium"
  >
    Subscribe
  </button>
</form>
)}
